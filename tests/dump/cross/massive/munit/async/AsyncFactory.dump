class massive.munit.async.AsyncFactory{
	public new(method) : observer : massive.munit.async.IAsyncDelegateObserver -> Void

	 = function(observer:massive.munit.async.IAsyncDelegateObserver) = {
		this.observer = observer;
		this.asyncDelegateCount = 0;
	};

	public createHandler(method) : testCase : Dynamic -> handler : Dynamic -> ?timeout : Null<Int> -> ?info : haxe.PosInfos -> Dynamic

	 = function(testCase:Dynamic,handler:Dynamic,timeout:Null<Int> = null,info:haxe.PosInfos = null) = {
		var delegate = new massive.munit.async.AsyncDelegate(testCase,handler,timeout,info);
		delegate.observer = this.observer;
		this.asyncDelegateCount ++;
		this.observer.asyncDelegateCreatedHandler(delegate);
		return delegate.delegateHandler;
	};

	public asyncDelegateCount((default,null)) : Int;

	public observer(var) : massive.munit.async.IAsyncDelegateObserver;

}