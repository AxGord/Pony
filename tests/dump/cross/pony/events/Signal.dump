class pony.events.Signal{
	public new(method) : Void -> Void

	 = function() = {
		this.silent = false;
		this._init();
		this.lostListeners = Type.createEmptyInstance(pony.events.Signal);
		this.lostListeners._init();
		this.takeListeners = Type.createEmptyInstance(pony.events.Signal);
		this.takeListeners._init();
	};

	public disableSilent(method) : Void -> Void

	 = function() = {
		this.silent = false;
	};

	public enableSilent(method) : Void -> Void

	 = function() = {
		this.silent = true;
	};

	public sw(method) : l1 : pony.events.Listener -> l2 : pony.events.Listener -> Void

	 = function(l1:pony.events.Listener,l2:pony.events.Listener) = {
		{
			var priority = 0;
			this.listeners.addElement(cast {
				var this1;
				haxe.Log.trace("cr_l",{fileName : "Listener.hx",lineNumber : 20,className : "pony.events._Listener.ListenerImpl",methodName : "_new"});
				this1 = {f : l1.f,count : 1,event : l1.event,prev : null,used : 0};
				this1;
			},priority);
			this;
		};
		{
			var listener = pony.events._Listener.ListenerImpl.fromFunction(pony._Function.FunctionImpl._new({
				var f = this.sw,l11 = l2,l21 = l1;
				function() = {
					return f(l11,l21);
				};
			},0)),priority = 0;
			this.listeners.addElement(cast {
				var this1;
				haxe.Log.trace("cr_l",{fileName : "Listener.hx",lineNumber : 20,className : "pony.events._Listener.ListenerImpl",methodName : "_new"});
				this1 = {f : listener.f,count : 1,event : listener.event,prev : null,used : 0};
				this1;
			},priority);
			this;
		};
	};

	public listen(inline method) : s : pony.events.Signal -> pony.events.Signal

	 = function(s:pony.events.Signal) = {
		{
			var listener = pony.events._Listener.ListenerImpl.fromEFunction(this.dispatchEvent),priority = 0;
			haxe.Log.trace(pony._Function.FunctionImpl.unusedCount,{fileName : "Signal.hx",lineNumber : 50,className : "pony.events.Signal",methodName : "add"});
			pony.events._Listener.ListenerImpl.use(listener);
			haxe.Log.trace(listener,{fileName : "Signal.hx",lineNumber : 52,className : "pony.events.Signal",methodName : "add"});
			haxe.Log.trace(pony._Function.FunctionImpl.unusedCount,{fileName : "Signal.hx",lineNumber : 53,className : "pony.events.Signal",methodName : "add"});
			var f = s.listeners.data.length == 0;
			s.listeners.addElement(listener,priority);
			if ((f)){
				var _this = s.takeListeners;
				_this.dispatchEvent(new pony.events.Event([]));
				_this;
			});
			haxe.Log.trace(pony._Function.FunctionImpl.unusedCount,{fileName : "Signal.hx",lineNumber : 57,className : "pony.events.Signal",methodName : "add"});
			s;
		};
		return this;
	};

	get_haveListeners(inline method) : Void -> Bool

	 = function() = {
		return ! (this.listeners.data.length == 0);
	};

	public buildListenerArgs(inline method) : args : Array<Dynamic> -> pony.events.Listener

	 = function(args:Array<Dynamic>) = {
		return {
			var event = new pony.events.Event(args);
			var _g = this;
			function() = {
				_g.dispatchEvent(event);
			};
		};
	};

	public buildListenerEvent(inline method) : event : pony.events.Event -> pony.events.Listener

	 = function(event:pony.events.Event) = {
		var _g = this;
		return function() = {
			_g.dispatchEvent(event);
		};
	};

	public removeAllListeners(inline method) : Void -> pony.events.Signal

	 = function() = {
		var f = this.listeners.data.length == 0;
		for (l in this.listeners.iterator()) {
			l.used --;
			if ((l.used <= 0)){
				if ((l.event))pony.events._Listener.ListenerImpl.eflist.remove(l.f.f) else {
					pony.events._Listener.ListenerImpl.flist.remove(l.f.id);
					{
						l.f.used --;
						if ((l.f.used <= 0)){
							pony._Function.FunctionImpl.list.splice(l.f.id,1);
							l.f = null;
							pony._Function.FunctionImpl.unusedCount --;
							haxe.Log.trace(pony._Function.FunctionImpl.unusedCount,{fileName : "Function.hx",lineNumber : 81,className : "pony._Function.FunctionImpl",methodName : "unuse"});
						});
					};
				});
				l = null;
			});
		};
		this.listeners.clear();
		if ((! f)){
			var _this = this.lostListeners;
			_this.dispatchEvent(new pony.events.Event([]));
			_this;
		});
		return this;
	};

	public sub(method) : args : Array<Dynamic> -> ?addon : Array<Dynamic> -> pony.events.Signal

	 = function(args:Array<Dynamic>,addon:Array<Dynamic> = null) = {
		if ((addon == null))addon = []);
		var s = new pony.events.Signal();
		{
			var priority = 0;
			haxe.Log.trace(pony._Function.FunctionImpl.unusedCount,{fileName : "Signal.hx",lineNumber : 50,className : "pony.events.Signal",methodName : "add"});
			pony.events._Listener.ListenerImpl.use(pony.events._Listener.ListenerImpl.fromEFunction(function(event:pony.events.Event) = {
				var a = event.args.copy();
				{
					var _g = 0;
					while ((_g < args.length)) {
						var arg = args[_g];
						++ _g;
						if ((a.shift() != arg))return);
					};
				};
				s.dispatchEvent(new pony.events.Event(a.concat(addon),event));
			}));
			haxe.Log.trace(function(event:pony.events.Event) = {
				var a = event.args.copy();
				{
					var _g = 0;
					while ((_g < args.length)) {
						var arg = args[_g];
						++ _g;
						if ((a.shift() != arg))return);
					};
				};
				s.dispatchEvent(new pony.events.Event(a.concat(addon),event));
			},{fileName : "Signal.hx",lineNumber : 52,className : "pony.events.Signal",methodName : "add"});
			haxe.Log.trace(pony._Function.FunctionImpl.unusedCount,{fileName : "Signal.hx",lineNumber : 53,className : "pony.events.Signal",methodName : "add"});
			var f = this.listeners.data.length == 0;
			this.listeners.addElement(pony.events._Listener.ListenerImpl.fromEFunction(function(event:pony.events.Event) = {
				var a = event.args.copy();
				{
					var _g = 0;
					while ((_g < args.length)) {
						var arg = args[_g];
						++ _g;
						if ((a.shift() != arg))return);
					};
				};
				s.dispatchEvent(new pony.events.Event(a.concat(addon),event));
			}),priority);
			if ((f)){
				var _this = this.takeListeners;
				_this.dispatchEvent(new pony.events.Event([]));
				_this;
			});
			haxe.Log.trace(pony._Function.FunctionImpl.unusedCount,{fileName : "Signal.hx",lineNumber : 57,className : "pony.events.Signal",methodName : "add"});
			this;
		};
		return s;
	};

	public dispatchArgs(inline method) : args : Array<Dynamic> -> pony.events.Signal

	 = function(args:Array<Dynamic>) = {
		this.dispatchEvent(new pony.events.Event(args));
		return this;
	};

	public dispatchEvent(method) : event : pony.events.Event -> pony.events.Signal

	 = function(event:pony.events.Event) = {
		if ((this.silent))return this);
		{
			var _g = 0,_g1 = this.listeners.data.copy();
			while ((_g < _g1.length)) {
				var l = _g1[_g];
				++ _g;
				var br = {
					l.count --;
					event.currentListener = l;
					var r = if ((l.event))Reflect.callMethod(null,l.f.f,l.f.args.concat([event])) else Reflect.callMethod(null,l.f.f,l.f.args.concat(event.args.slice(0,l.f.count))));
					l.prev = event;
					if ((r == null))true else r);
				} == false || event._stopPropagation;
				if ((l.count == 0)){
					var listener = l;
					var f = this.listeners.data.length == 0;
					this.listeners.removeElement(listener);
					{
						listener.used --;
						if ((listener.used <= 0)){
							if ((listener.event))pony.events._Listener.ListenerImpl.eflist.remove(listener.f.f) else {
								pony.events._Listener.ListenerImpl.flist.remove(listener.f.id);
								{
									listener.f.used --;
									if ((listener.f.used <= 0)){
										pony._Function.FunctionImpl.list.splice(listener.f.id,1);
										listener.f = null;
										pony._Function.FunctionImpl.unusedCount --;
										haxe.Log.trace(pony._Function.FunctionImpl.unusedCount,{fileName : "Function.hx",lineNumber : 81,className : "pony._Function.FunctionImpl",methodName : "unuse"});
									});
								};
							});
							listener = null;
						});
					};
					if ((this.listeners.data.length == 0 && ! f))this.lostListeners.dispatchArgs([]));
					this;
				});
				if ((br))break);
			};
		};
		return this;
	};

	public once(inline method) : listener : pony.events.Listener -> ?priority : Int -> pony.events.Signal

	 = function(listener:pony.events.Listener,priority:Int = 0) = {
		this.listeners.addElement(cast {
			var this1;
			haxe.Log.trace("cr_l",{fileName : "Listener.hx",lineNumber : 20,className : "pony.events._Listener.ListenerImpl",methodName : "_new"});
			this1 = {f : listener.f,count : 1,event : listener.event,prev : null,used : 0};
			this1;
		},priority);
		return this;
	};

	public changePriority(inline method) : listener : pony.events.Listener -> ?priority : Int -> pony.events.Signal

	 = function(listener:pony.events.Listener,priority:Int = 0) = {
		this.listeners.changeElement(listener,priority);
		return this;
	};

	public remove(inline method) : listener : pony.events.Listener -> pony.events.Signal

	 = function(listener:pony.events.Listener) = {
		var f = this.listeners.data.length == 0;
		this.listeners.removeElement(listener);
		{
			listener.used --;
			if ((listener.used <= 0)){
				if ((listener.event))pony.events._Listener.ListenerImpl.eflist.remove(listener.f.f) else {
					pony.events._Listener.ListenerImpl.flist.remove(listener.f.id);
					{
						listener.f.used --;
						if ((listener.f.used <= 0)){
							pony._Function.FunctionImpl.list.splice(listener.f.id,1);
							listener.f = null;
							pony._Function.FunctionImpl.unusedCount --;
							haxe.Log.trace(pony._Function.FunctionImpl.unusedCount,{fileName : "Function.hx",lineNumber : 81,className : "pony._Function.FunctionImpl",methodName : "unuse"});
						});
					};
				});
				listener = null;
			});
		};
		if ((this.listeners.data.length == 0 && ! f))this.lostListeners.dispatchArgs([]));
		return this;
	};

	public add(inline method) : listener : pony.events.Listener -> ?priority : Int -> pony.events.Signal

	 = function(listener:pony.events.Listener,priority:Int = 0) = {
		haxe.Log.trace(pony._Function.FunctionImpl.unusedCount,{fileName : "Signal.hx",lineNumber : 50,className : "pony.events.Signal",methodName : "add"});
		pony.events._Listener.ListenerImpl.use(listener);
		haxe.Log.trace(listener,{fileName : "Signal.hx",lineNumber : 52,className : "pony.events.Signal",methodName : "add"});
		haxe.Log.trace(pony._Function.FunctionImpl.unusedCount,{fileName : "Signal.hx",lineNumber : 53,className : "pony.events.Signal",methodName : "add"});
		var f = this.listeners.data.length == 0;
		this.listeners.addElement(listener,priority);
		if ((f)){
			var _this = this.takeListeners;
			_this.dispatchEvent(new pony.events.Event([]));
			_this;
		});
		haxe.Log.trace(pony._Function.FunctionImpl.unusedCount,{fileName : "Signal.hx",lineNumber : 57,className : "pony.events.Signal",methodName : "add"});
		return this;
	};

	public _init(method) : Void -> Void

	 = function() = {
		this.listeners = new pony.Priority();
	};

	public haveListeners((get_haveListeners,null)) : Bool;

	listeners(var) : pony.Priority<pony.events.Listener>;

	public takeListeners(var) : pony.events.Signal;

	public lostListeners(var) : pony.events.Signal;

	public silent(var) : Bool;

}