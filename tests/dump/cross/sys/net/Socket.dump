extern class sys.net.Socket{
	public new(method) : Void -> Void;

	public setFastSend(method) : b : Bool -> Void;

	public setBlocking(method) : b : Bool -> Void;

	public waitForRead(method) : Void -> Void;

	public setTimeout(method) : timeout : Float -> Void;

	public host(method) : Void -> { port : Int, host : sys.net.Host };

	public peer(method) : Void -> { port : Int, host : sys.net.Host };

	public accept(method) : Void -> sys.net.Socket;

	public bind(method) : host : sys.net.Host -> port : Int -> Void;

	public shutdown(method) : read : Bool -> write : Bool -> Void;

	public listen(method) : connections : Int -> Void;

	public connect(method) : host : sys.net.Host -> port : Int -> Void;

	public write(method) : content : String -> Void;

	public read(method) : Void -> String;

	public close(method) : Void -> Void;

	public custom(var) : Dynamic;

	public output((default,null)) : haxe.io.Output;

	public input((default,null)) : haxe.io.Input;

	static public select(method) : read : Array<sys.net.Socket> -> write : Array<sys.net.Socket> -> others : Array<sys.net.Socket> -> ?timeout : Null<Float> -> { write : Array<sys.net.Socket>, read : Array<sys.net.Socket>, others : Array<sys.net.Socket> };

}