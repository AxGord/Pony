class massive.munit.client.JUnitReportClient implements massive.munit.IAdvancedTestResultClient{
	public new(method) : Void -> Void

	 = function() = {
		this.id = "junit";
		this.xml = new StringBuf();
		this.currentTestClass = "";
		this.newline = "\n";
		this.testSuiteXML = null;
		StringBuf.__add(this.xml.b,"<testsuites>" + this.newline);
	};

	startTestSuite(method) : Void -> Void

	 = function() = {
		this.suitePassCount = 0;
		this.suiteFailCount = 0;
		this.suiteErrorCount = 0;
		this.suiteExecutionTime = massive.munit.util.Timer.stamp();
		this.testSuiteXML = new StringBuf();
	};

	endTestSuite(method) : Void -> Void

	 = function() = {
		if ((this.testSuiteXML == null))return);
		var suiteTestCount = this.suitePassCount + this.suiteFailCount + this.suiteErrorCount;
		this.suiteExecutionTime = massive.munit.util.Timer.stamp() - this.suiteExecutionTime;
		var header = "<testsuite errors=\"" + this.suiteErrorCount + "\" failures=\"" + this.suiteFailCount + "\" hostname=\"\" name=\"" + this.currentTestClass + "\" tests=\"" + suiteTestCount + "\" time=\"" + massive.munit.util.MathUtil.round(this.suiteExecutionTime,5) + "\" timestamp=\"" + Std.string(Date.now()) + "\">" + this.newline;
		var footer = "</testsuite>" + this.newline;
		StringBuf.__add(this.testSuiteXML.b,"<system-out></system-out>" + this.newline);
		StringBuf.__add(this.testSuiteXML.b,"<system-err></system-err>" + this.newline);
		StringBuf.__add(this.xml.b,header);
		StringBuf.__add(this.xml.b,new String(StringBuf.__to_string(this.testSuiteXML.b)));
		StringBuf.__add(this.xml.b,footer);
	};

	public reportFinalStatistics(method) : testCount : Int -> passCount : Int -> failCount : Int -> errorCount : Int -> ignoreCount : Int -> time : Float -> Dynamic

	 = function(testCount:Int,passCount:Int,failCount:Int,errorCount:Int,ignoreCount:Int,time:Float) = {
		StringBuf.__add(this.xml.b,"</testsuites>");
		if ((this.get_completionHandler() != null))this.get_completionHandler()(this));
		return new String(StringBuf.__to_string(this.xml.b));
	};

	public addIgnore(method) : result : massive.munit.TestResult -> Void

	 = function(result:massive.munit.TestResult) = {
	};

	public addError(method) : result : massive.munit.TestResult -> Void

	 = function(result:massive.munit.TestResult) = {
		this.suiteErrorCount ++;
		StringBuf.__add(this.testSuiteXML.b,"<testcase classname=\"" + result.className + "\" name=\"" + result.name + "\" time=\"" + massive.munit.util.MathUtil.round(result.executionTime,5) + "\" >" + this.newline);
		StringBuf.__add(this.testSuiteXML.b,"<error message=\"" + Std.string(result.error.message) + "\" type=\"" + Std.string(result.error.type) + "\">");
		StringBuf.__add(this.testSuiteXML.b,result.error);
		StringBuf.__add(this.testSuiteXML.b,"</error>" + this.newline);
		StringBuf.__add(this.testSuiteXML.b,"</testcase>" + this.newline);
	};

	public addFail(method) : result : massive.munit.TestResult -> Void

	 = function(result:massive.munit.TestResult) = {
		this.suiteFailCount ++;
		StringBuf.__add(this.testSuiteXML.b,"<testcase classname=\"" + result.className + "\" name=\"" + result.name + "\" time=\"" + massive.munit.util.MathUtil.round(result.executionTime,5) + "\" >" + this.newline);
		StringBuf.__add(this.testSuiteXML.b,"<failure message=\"" + result.failure.message + "\" type=\"" + result.failure.type + "\">");
		StringBuf.__add(this.testSuiteXML.b,result.failure);
		StringBuf.__add(this.testSuiteXML.b,"</failure>" + this.newline);
		StringBuf.__add(this.testSuiteXML.b,"</testcase>" + this.newline);
	};

	public addPass(method) : result : massive.munit.TestResult -> Void

	 = function(result:massive.munit.TestResult) = {
		this.suitePassCount ++;
		StringBuf.__add(this.testSuiteXML.b,"<testcase classname=\"" + result.className + "\" name=\"" + result.name + "\" time=\"" + massive.munit.util.MathUtil.round(result.executionTime,5) + "\" />" + this.newline);
	};

	public setCurrentTestClass(method) : className : String -> Void

	 = function(className:String) = {
		if ((this.currentTestClass == className))return);
		if ((this.currentTestClass != null))this.endTestSuite());
		this.currentTestClass = className;
		if ((this.currentTestClass != null))this.startTestSuite());
	};

	suiteExecutionTime(var) : Float;

	suiteErrorCount(var) : Int;

	suiteFailCount(var) : Int;

	suitePassCount(var) : Int;

	currentTestClass(var) : String;

	testSuiteXML(var) : StringBuf;

	xml(var) : StringBuf;

	public newline(var) : String;

	set_completionHandler(method) : value : (massive.munit.ITestResultClient -> Void) -> (massive.munit.ITestResultClient -> Void)

	 = function(value:massive.munit.ITestResultClient -> Void) = {
		return this.completionHandler = value;
	};

	get_completionHandler(method) : Void -> (massive.munit.ITestResultClient -> Void)

	 = function() = {
		return this.completionHandler;
	};

	public completionHandler((get_completionHandler,set_completionHandler)) : massive.munit.ITestResultClient -> Void;

	public id((default,null)) : String;

	static public DEFAULT_ID((inline,never)) : String

	 = "junit";

}