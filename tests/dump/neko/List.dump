class List<T : List.T>{
	public new(method) : Void -> Void

	 = function() = {
		this.length = 0;
	};

	public iterator(method) : Void -> Iterator<List.T>

	 = function() = {
		return cast {h : this.h,hasNext : function() = {
			return this.h != null;
		},next : function() = {
			if ((this.h == null))return null);
			var x = this.h[0];
			this.h = this.h[1];
			return x;
		}};
	};

	public push(method) : item : List.T -> Void

	 = function(item:List.T) = {
		var x = __dollar__array(item,this.h);
		this.h = x;
		if ((this.q == null))this.q = x);
		this.length ++;
	};

	public add(method) : item : List.T -> Void

	 = function(item:List.T) = {
		var x = __dollar__array(item,null);
		if ((this.h == null))this.h = x else this.q[1] = x);
		this.q = x;
		this.length ++;
	};

	public length((default,null)) : Int;

	q(var) : Array<Dynamic>;

	h(var) : Array<Dynamic>;

}